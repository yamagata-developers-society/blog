{"version":3,"sources":["webpack:///./src/components/AuthorCard.tsx","webpack:///./src/components/PostFullFooter.tsx","webpack:///./src/components/PostFullFooterRight.tsx","webpack:///./src/components/icons/infinity.tsx","webpack:///./src/components/ReadNextCard.tsx","webpack:///./src/components/subscribe/Subscribe.tsx","webpack:///./src/templates/post.tsx","webpack:///./src/pages/about.tsx","webpack:///./src/components/PostContent.tsx"],"names":["AuthorCardSection","styled","target","AuthorCardName","colors","darkgrey","AuthorCardContent","midgrey","AuthorCard","_ref","author","react","className","AuthorProfileImage","src","avatar","children","fixed","alt","id","gatsby_browser_entry","to","_","bio","PostFullFoot","PostFullFooter","props","PostFullFooterRightDiv","AuthorCardButton","css","lighten","blue","PostFullFooterRight","authorId","InfinityIcon","xmlns","viewBox","d","ReadNextCardStyles","coverImage","ReadNextCardHeader","ReadNextCardHeaderSitetitle","ReadNextCardHeaderTitle","ReadNextDivider","ReadNextCardContent","ReadNextCardFooter","ReadNextCard","query","render","header","childImageSharp","fluid","config","title","tags","infinity","relatedPosts","edges","map","n","key","node","frontmatter","fields","slug","totalCount","data","_3319800513","SubscribeFormSection","whitegrey","SubscribeFormTitle","Subscribe","SubscribeForm","PostTemplate","PostFull","NoImage","PostFullHeader","PostFullMeta","PostFullMetaDate","PostFullTitle","setLightness","PostFullImage","lightgrey","DateDivider","ReadNextFeed","PageTemplate","post","markdownRemark","width","height","image","sizes","split","String","Number","aspectRatio","layouts","Helmet","name","content","excerpt","property","siteUrl","pathContext","date","facebook","twitter","Wrapper","SiteHeader","outer","inner","SiteNav","SiteMain","dateTime","userDate","length","gatsby_image_default","a","style","PostContent","htmlAst","showSubscribe","subscribe_Subscribe","components_PostFullFooter","components_AuthorCard","components_PostFullFooterRight","components_ReadNextCard","pageContext","prev","PostCard","next","Footer","__webpack_require__","r","__webpack_exports__","_layouts__WEBPACK_IMPORTED_MODULE_0__","_components_Wrapper__WEBPACK_IMPORTED_MODULE_1__","_components_header_SiteNav__WEBPACK_IMPORTED_MODULE_2__","_styles_shared__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react_emotion__WEBPACK_IMPORTED_MODULE_5__","_templates_post__WEBPACK_IMPORTED_MODULE_6__","_components_PostContent__WEBPACK_IMPORTED_MODULE_7__","_components_Footer__WEBPACK_IMPORTED_MODULE_8__","react_helmet__WEBPACK_IMPORTED_MODULE_9__","react_helmet__WEBPACK_IMPORTED_MODULE_9___default","_website_config__WEBPACK_IMPORTED_MODULE_10__","About","description","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","class","href","PostFullContent","darken","setSaturation","renderAst","rehypeReact","createElement","React","components","Compiler","Ast","ast","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","properties","_ref2","react__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-about-tsx-039dcc78ee12c9aaf18f.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport styled from 'react-emotion';\n\nimport { colors } from '../styles/colors';\nimport { AuthorProfileImage } from '../styles/shared';\n\nconst AuthorCardSection = styled.section`\n  display: flex;\n`;\n\nconst AuthorCardName = styled.h4`\n  margin: 8px 0 2px 0;\n  padding: 0;\n  font-size: 2rem;\n\n  a {\n    color: ${colors.darkgrey};\n    font-weight: 700;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst AuthorCardContent = styled.section`\n  p {\n    margin: 0;\n    color: ${colors.midgrey};\n    line-height: 1.3em;\n  }\n`;\n\nexport interface AuthorCardProps {\n  author: any;\n}\n\nconst AuthorCard: React.SFC<AuthorCardProps> = ({ author }) => {\n  return (\n    <AuthorCardSection>\n      {/* TODO: default avatar */}\n      {/* TODO: author page url */}\n      <img className={`${AuthorProfileImage}`} src={author.avatar.children[0].fixed.src} alt={author.id} />\n      <AuthorCardContent>\n        <AuthorCardName>\n          <Link to={`/author/${_.kebabCase(author.id)}/`}>{author.id}</Link>\n        </AuthorCardName>\n        {author.bio ? (\n          <p>{author.bio}</p>\n        ) : (\n          <p>\n            Read <Link to={`/author/${_.kebabCase(author.id)}/`}>more posts</Link> by this author.\n          </p>\n        )}\n      </AuthorCardContent>\n    </AuthorCardSection>\n  );\n};\n\nexport default AuthorCard;\n","import * as React from 'react';\nimport styled from 'react-emotion';\n\nconst PostFullFoot = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 auto;\n  padding: 3vw 0 6vw 0;\n  max-width: 840px;\n`;\n\nconst PostFullFooter: React.SFC = props => <PostFullFoot>{props.children}</PostFullFoot>;\n\nexport default PostFullFooter;\n","import { Link } from 'gatsby';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport styled, { css } from 'react-emotion';\nimport { colors } from '../styles/colors';\nimport { lighten } from 'polished';\n\nconst PostFullFooterRightDiv = styled.div`\n  flex-shrink: 0;\n  margin-left: 20px;\n`;\n\nconst AuthorCardButton = css`\n  display: block;\n  padding: 9px 16px;\n  /* border: color(var(--midgrey) l(+20%)) 1px solid; */\n  border: ${lighten('0.2', colors.midgrey)} 1px solid;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1;\n  font-weight: 500;\n  border-radius: 20px;\n  transition: all ease 0.2s;\n\n  :hover {\n    border-color: ${colors.blue};\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n`;\n\nexport interface PostFullFooterRightProps {\n  authorId: string;\n}\n\nconst PostFullFooterRight: React.SFC<PostFullFooterRightProps> = props => (\n  <PostFullFooterRightDiv>\n    <Link className={`${AuthorCardButton}`} to={`/author/${_.kebabCase(props.authorId)}/`}>\n      Read More\n    </Link>\n  </PostFullFooterRightDiv>\n);\n\nexport default PostFullFooterRight;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst InfinityIcon: React.SFC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5\" />\n  </svg>\n);\nexport default InfinityIcon;\n","import { Link, StaticQuery, graphql } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'react-emotion';\nimport * as _ from 'lodash';\n\nimport { colors } from '../styles/colors';\nimport InfinityIcon from './icons/infinity';\nimport config from '../website-config';\n\nexport interface ReadNextCardStylesProps {\n  coverImage: string;\n}\n\nconst ReadNextCardStyles = styled.article<ReadNextCardStylesProps>(\n  props => `\n  position: relative;\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  padding: 25px;\n  color: #fff;\n  background: ${colors.darkgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  background-image: url(\"${props.coverImage}\");\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: block;\n    background: linear-gradient(135deg, rgba(0,40,60,0.8) 0%,rgba(0,20,40,0.7) 100%);\n    border-radius: 5px;\n    backdrop-filter: blur(2px);\n  }\n`,\n);\n\nconst ReadNextCardHeader = styled.header`\n  position: relative;\n  z-index: 50;\n  padding-top: 20px;\n  text-align: center;\n`;\n\nconst ReadNextCardHeaderSitetitle = styled.small`\n  display: block;\n  font-size: 1.3rem;\n  line-height: 1.3em;\n  opacity: 0.8;\n`;\n\nconst ReadNextCardHeaderTitle = styled.h3`\n  margin: 0;\n  padding: 0 20px;\n  color: #fff;\n  font-size: 3rem;\n  line-height: 1.2em;\n  letter-spacing: 1px;\n\n  a {\n    color: #fff;\n    font-weight: 300;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ReadNextDivider = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: 80px;\n\n  svg {\n    width: 40px;\n    fill: transparent;\n    stroke: #fff;\n\n    stroke-width: 0.5px;\n    stroke-opacity: 0.65;\n  }\n`;\n\nconst ReadNextCardContent = styled.div`\n  position: relative;\n  z-index: 50;\n  flex-grow: 1;\n  display: flex;\n  font-size: 1.7rem;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0;\n    text-align: center;\n    list-style: none;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n    font-size: 1.6rem;\n    line-height: 1.25em;\n    font-weight: 200;\n    letter-spacing: -0.5px;\n  }\n\n  li a {\n    display: block;\n    padding: 20px 0;\n    border-bottom: rgba(255, 255, 255, 0.3) 1px solid;\n    color: #fff;\n    font-weight: 500;\n    vertical-align: top;\n    transition: opacity 0.3s ease;\n  }\n\n  li:first-of-type a {\n    padding-top: 10px;\n  }\n\n  li a:hover {\n    opacity: 1;\n  }\n`;\n\nconst ReadNextCardFooter = styled.footer`\n  position: relative;\n  margin: 15px 0 3px 0;\n  text-align: center;\n\n  a {\n    color: #fff;\n  }\n`;\n\nexport interface ReadNextProps {\n  tags: string[];\n  relatedPosts: {\n    totalCount: number;\n    edges: {\n      node: {\n        timeToRead: number;\n        frontmatter: {\n          title: string;\n        };\n        fields: {\n          slug: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport interface ReadNextQuery {\n  header: {\n    childImageSharp: {\n      fluid: any;\n    };\n  };\n}\n\nconst ReadNextCard: React.SFC<ReadNextProps> = props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ReadNextQuery {\n          header: file(relativePath: { eq: \"img/common/yds-cover.jpg\" }) {\n            childImageSharp {\n              # Specify the image processing specifications right in the query.\n              # Makes it trivial to update as your page's design changes.\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      // tslint:disable-next-line:react-this-binding-issue\n      render={({ header }: ReadNextQuery) => (\n        <ReadNextCardStyles coverImage={header.childImageSharp.fluid.src}>\n          <ReadNextCardHeader>\n            <ReadNextCardHeaderSitetitle>\n              &mdash; {config.title} &mdash;\n            </ReadNextCardHeaderSitetitle>\n            <ReadNextCardHeaderTitle>\n              <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>{props.tags[0]}</Link>\n            </ReadNextCardHeaderTitle>\n          </ReadNextCardHeader>\n          <ReadNextDivider>\n            <InfinityIcon />\n          </ReadNextDivider>\n          <ReadNextCardContent>\n            <ul>\n              {props.relatedPosts.edges.map(n => {\n                return (\n                  <li key={n.node.frontmatter.title}>\n                    <Link to={n.node.fields.slug}>{n.node.frontmatter.title}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </ReadNextCardContent>\n          <ReadNextCardFooter>\n            <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>\n              {props.relatedPosts.totalCount > 1 &&\n                `See all ${props.relatedPosts.totalCount} posts`}\n              {props.relatedPosts.totalCount === 1 && `1 post`}\n              {props.relatedPosts.totalCount === 0 && `No posts`} →\n            </Link>\n          </ReadNextCardFooter>\n        </ReadNextCardStyles>\n      )}\n    />\n  );\n};\n\nexport default ReadNextCard;\n","import { lighten } from 'polished';\nimport * as React from 'react';\nimport { css, default as styled } from 'react-emotion';\n\nimport { colors } from '../../styles/colors';\nimport SubscribeForm from './SubscribeForm';\n\n\nconst SubscribeFormSection = styled.section`\n  margin: 1.5em 0;\n  padding: 6.5vw 7vw 7vw;\n  /* border: color(var(--whitegrey) l(+2%)) 1px solid; */\n  border: ${lighten('0.02', colors.whitegrey)} 1px solid;\n  text-align: center;\n  /* background: color(var(--whitegrey) l(+4%)); */\n  background: ${lighten('0.04', colors.whitegrey)};\n  border-radius: 7px;\n\n  p {\n    margin-bottom: 1em;\n    color: ${colors.midgrey};\n    font-size: 2.2rem;\n    line-height: 1.55em;\n    letter-spacing: 0.2px;\n  }\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 420px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n  @media (max-width: 650px) {\n    p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nconst SubscribeFormTitle = css`\n  margin: 0 0 3px 0;\n  padding: 0;\n  color: ${colors.darkgrey};\n  font-size: 3.5rem;\n  line-height: 1;\n  font-weight: 700;\n  @media (max-width: 650px) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport interface SubscribeProps {\n  title: string;\n}\n\nconst Subscribe: React.SFC<SubscribeProps> = props => {\n  return (\n    <SubscribeFormSection>\n      <h3 className={`${SubscribeFormTitle}`}>Subscribe to {props.title}</h3>\n      <p>Get the latest posts delivered right to your inbox</p>\n      <SubscribeForm />\n    </SubscribeFormSection>\n  );\n};\n\nexport default Subscribe;\n","import { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled, { css } from 'react-emotion';\nimport { Helmet } from 'react-helmet';\n\nimport AuthorCard from '../components/AuthorCard';\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport PostContent from '../components/PostContent';\nimport PostFullFooter from '../components/PostFullFooter';\nimport PostFullFooterRight from '../components/PostFullFooterRight';\nimport ReadNextCard from '../components/ReadNextCard';\nimport Subscribe from '../components/subscribe/Subscribe';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteHeader, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\nconst PostTemplate = css`\n  .site-main {\n    background #fff;\n    padding-bottom: 4vw;\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  margin: 0 auto;\n  padding: 6vw 3vw 3vw;\n  max-width: 1040px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    padding: 14vw 3vw 10vw;\n  }\n`;\n\nconst PostFullMeta = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.midgrey};\n  font-size: 1.4rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  @media (max-width: 500px) {\n    font-size: 1.2rem;\n    line-height: 1.3em;\n  }\n`;\n\nconst PostFullMetaDate = styled.time`\n  color: ${colors.blue};\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    font-size: 2.9rem;\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 0 -10vw -165px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 0 -4vw -100px;\n    height: 600px;\n    border-radius: 0;\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nconst DateDivider = styled.span`\n  display: inline-block;\n  margin: 0 6px 1px;\n`;\n\nconst ReadNextFeed = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\ninterface PageTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        tags: string[];\n        author: {\n          id: string;\n          bio: string;\n          avatar: {\n            children: {\n              fixed: {\n                src: string;\n              };\n            }[];\n          };\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: {\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }[];\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    title: string;\n    date: string;\n    tags: string[];\n    author: {\n      id: string;\n      bio: string;\n      avatar: {\n        children: {\n          fixed: {\n            src: string;\n          };\n        }[];\n      };\n    };\n  };\n}\n\nconst PageTemplate: React.SFC<PageTemplateProps> = props => {\n  const post = props.data.markdownRemark;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <title>{post.frontmatter.title}</title>\n        <meta name=\"description\" content={post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta property=\"og:image\" content={post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        <meta property=\"article:publisher\" content={config.facebook} />\n        <meta property=\"article:author\" content={config.facebook} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta name=\"twitter:image\" content={post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author.id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        <meta name=\"twitter:site\" content={`@${config.twitter.split('https://twitter.com/')[0]}`} />\n        <meta\n          name=\"twitter:creator\"\n          content={`@${config.twitter.split('https://twitter.com/')[0]}`}\n        />\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper className={`${PostTemplate}`}>\n        <header className={`${SiteHeader} ${outer}`}>\n          <div className={`${inner}`}>\n            <SiteNav />\n          </div>\n        </header>\n        <main id=\"site-main\" className={`site-main ${SiteMain} ${outer}`}>\n          <div className={`${inner}`}>\n            {/* TODO: no-image css tag? */}\n            <article className={`${PostFull} ${!post.frontmatter.image ? NoImage : ''}`}>\n              <PostFullHeader>\n                <PostFullMeta>\n                  <PostFullMetaDate dateTime={post.frontmatter.date}>\n                    {post.frontmatter.userDate}\n                  </PostFullMetaDate>\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\n                    <>\n                      <DateDivider>/</DateDivider>\n                      <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                        {post.frontmatter.tags[0]}\n                      </Link>\n                    </>\n                  )}\n                </PostFullMeta>\n                <PostFullTitle>{post.frontmatter.title}</PostFullTitle>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.image.childImageSharp.fluid}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n\n              <PostFullFooter>\n                <AuthorCard author={post.frontmatter.author} />\n                <PostFullFooterRight authorId={post.frontmatter.author.id} />\n              </PostFullFooter>\n            </article>\n          </div>\n        </main>\n\n        {/* Links to Previous/Next posts */}\n        <aside className={`read-next ${outer}`}>\n          <div className={`${inner}`}>\n            <ReadNextFeed>\n              {props.data.relatedPosts && (\n                <ReadNextCard tags={post.frontmatter.tags} relatedPosts={props.data.relatedPosts} />\n              )}\n\n              {props.pageContext.prev && <PostCard post={props.pageContext.prev} />}\n              {props.pageContext.next && <PostCard post={props.pageContext.next} />}\n            </ReadNextFeed>\n          </div>\n        </aside>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/common/yds-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        author {\n          id\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fixed(quality: 100) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 3\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import IndexLayout from '../layouts';\nimport Wrapper from '../components/Wrapper';\nimport SiteNav from '../components/header/SiteNav';\nimport { SiteHeader, outer, inner, SiteMain } from '../styles/shared';\nimport * as React from 'react';\nimport { css } from 'react-emotion';\nimport { PostFullHeader, PostFullTitle, NoImage, PostFull } from '../templates/post';\nimport { PostFullContent } from '../components/PostContent';\nimport Footer from '../components/Footer';\nimport Helmet from 'react-helmet';\nimport config from '../website-config';\n\nconst PageTemplate = css`\n  .site-main {\n    background #fff;\n    padding-bottom: 4vw;\n  }\n  .responsive-iframe {\n    padding-bottom: 56.1667%;\n    position: relative;\n    height: 0px;\n    overflow: hidden;\n    margin-bottom: 3.2rem;\n    background-color: #efefef;\n  }\n  .responsive-iframe iframe {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst About: React.SFC = () => (\n  <IndexLayout>\n    <Helmet>\n      <title>About - {config.title}</title>\n      <meta name=\"description\" content={`About - ${config.description}`} />\n    </Helmet>\n    <Wrapper className={`${PageTemplate}`}>\n      <header className={`${SiteHeader} ${outer}`}>\n        <div className={`${inner}`}>\n          <SiteNav />\n        </div>\n      </header>\n      <main id=\"site-main\" className={`site-main ${SiteMain} ${outer}`}>\n        <article className={`${PostFull} post page ${NoImage}`}>\n          <PostFullHeader>\n            <PostFullTitle>About</PostFullTitle>\n          </PostFullHeader>\n\n          <PostFullContent className=\"post-full-content\">\n            <div className=\"post-content\">\n              <div className={`responsive-iframe`}>\n                <iframe\n                  src=\"https://player.vimeo.com/video/303992016\"\n                  width=\"640\"\n                  height=\"360\"\n                  frameborder=\"0\"\n                  webkitallowfullscreen\n                  mozallowfullscreen\n                  allowfullscreen\n                  class=\"loading-element shimmer-animation\"\n                />\n              </div>\n              <p>\n                <small>\n                  Source: video by <a href=\"http://handagiken.com/\">Handa Giken Works</a>\n                </small>\n              </p>\n              <p>\n                <i>English follows Japanese</i>\n              </p>\n              <p>【 好きなこと、学びたいこと、どんどんやろう！】</p>\n              <p>\n                Yamagata Developers Society\n                は、山形でWeb開発に関わっているエンジニア向けのグループです。\n                dプログラマー、SE、デザイナー、勉強中の人等が集い、互いのスキルアップや仕事での連携を目指す、オープンなMeet\n                up を開催します。\n              </p>\n              <p>\n                持物は【学びたい言語・スキル】と【エンジニア魂】。そして、飲物！持参！\n                (珈琲・紅茶・冷たいお茶・少しのビールのご用意ございます)\n              </p>\n              <p>\n                おいしいものを食べたり飲んだりしながら、一緒に山形のWeb開発を一緒に盛り上げましょう！\n              </p>\n              <hr />\n              <p>\n                Yamagata Developer Society is a community for professionals and students alike. We\n                hold monthly developer meetups at{' '}\n                <a href=\"https://www.coworking-too.com/\">coworking space too</a> in downtown\n                Yamagata.\n              </p>\n              <blockquote>\n                <p>\n                  If you'd like to join one of our montly meetups, head over to coworking space's{' '}\n                  <a href=\"https://www.facebook.com/pg/as.works.2015/events/\">Events Page</a> and\n                  learn about our upcomming events!\n                </p>\n              </blockquote>\n              <p>\n                If you're a developer: check us out{' '}\n                <a href=\"https://github.com/yamagata-developers-society\">on Github</a>. New projects\n                welcome!\n              </p>\n              <p>\n                If you are looking for some other way to connect with us, please find us on{' '}\n                <a href=\"https://twitter.com/yamagataDevSoc\">Twitter</a>.\n              </p>\n            </div>\n          </PostFullContent>\n        </article>\n      </main>\n      <Footer />\n    </Wrapper>\n  </IndexLayout>\n);\n\nexport default About;\n","import { lighten, setLightness, darken, setSaturation } from 'polished';\nimport * as React from 'react';\nimport styled from 'react-emotion';\nimport rehypeReact from 'rehype-react';\n\nimport { colors } from '../styles/colors';\n\nexport const PostFullContent = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 0;\n  min-height: 230px;\n  font-family: Georgia, serif;\n  font-size: 2.2rem;\n  line-height: 1.6em;\n  background: #fff;\n\n  @media (max-width: 1170px) {\n    padding: 5vw 7vw 0;\n  }\n  @media (max-width: 800px) {\n    font-size: 1.9rem;\n  }\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 15px;\n    left: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(-5deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 15px;\n    right: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(5deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  dl,\n  pre,\n  blockquote,\n  .post-full-comments,\n  .footnotes {\n    min-width: 100%;\n  }\n\n  li {\n    word-break: break-word;\n  }\n\n  li p {\n    margin: 0;\n  }\n\n  a {\n    color: #000;\n    word-break: break-word;\n    box-shadow: ${colors.blue} 0 -1px 0 inset;\n  }\n\n  a:hover {\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n\n  strong,\n  em {\n    /* color: color(var(--darkgrey) l(-5%)); */\n    color: ${darken('0.05', colors.darkgrey)};\n  }\n\n  small {\n    display: inline-block;\n    line-height: 1.6em;\n  }\n\n  li:first-child {\n    margin-top: 0;\n  }\n\n  img,\n  video {\n    display: block;\n    margin: 1.5em auto;\n    max-width: 1040px;\n    height: auto;\n  }\n  @media (max-width: 1040px) {\n    img,\n    video {\n      width: 100%;\n    }\n  }\n\n  img[src$='#full'] {\n    max-width: none;\n    width: 100vw;\n  }\n\n  img + br + small {\n    display: block;\n    margin-top: -3em;\n    margin-bottom: 1.5em;\n    text-align: center;\n  }\n\n  /* Override third party iframe styles */\n  iframe {\n    margin: 0 auto !important;\n  }\n\n  blockquote {\n    margin: 0 0 1.5em;\n    padding: 0 1.5em;\n    border-left: #3eb0ef 3px solid;\n  }\n\n  blockquote p {\n    margin: 0 0 1em 0;\n    color: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    font-style: italic;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n\n  code {\n    padding: 0 5px 2px;\n    font-size: 1em;\n    line-height: 1em;\n    font-weight: 400 !important;\n    background: ${colors.whitegrey};\n    border-radius: 3px;\n  }\n\n  p code {\n    word-break: break-all;\n  }\n\n  pre {\n    overflow-x: auto;\n    margin: 1.5em 0 3em;\n    padding: 20px;\n    max-width: 100%;\n    /* border: color(var(--darkgrey) l(-10%)) 1px solid; */\n    border: ${darken('0.01', colors.darkgrey)} 1px solid;\n    color: ${colors.whitegrey};\n    font-size: 1.4rem;\n    line-height: 1.5em;\n    /* background: color(var(--darkgrey) l(-3%)); */\n    background: ${darken('0.03', colors.darkgrey)};\n    border-radius: 5px;\n  }\n\n  pre code {\n    padding: 0;\n    font-size: 1.15em;\n    line-height: inherit;\n    background: transparent;\n  }\n\n  pre code :not(span) {\n    color: inherit;\n  }\n\n  /* .fluid-width-video-wrapper { */\n  .gatsby-resp-iframe-wrapper {\n    margin: 1.5em 0 3em;\n  }\n\n  hr {\n    margin: 4vw 0;\n  }\n\n  hr:after {\n    content: '';\n    position: absolute;\n    top: -15px;\n    left: 50%;\n    display: block;\n    margin-left: -10px;\n    width: 1px;\n    height: 30px;\n    /* background: color(var(--lightgrey) l(+10%)); */\n    background: ${lighten('0.1', colors.lightgrey)};\n    box-shadow: #fff 0 0 0 5px;\n    transform: rotate(45deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${setLightness('0.05', colors.darkgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  h1 {\n    margin: 0.5em 0;\n    font-size: 4.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.8rem;\n    }\n  }\n\n  h2 {\n    margin: 0.5em 0;\n    font-size: 3.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 2.6rem;\n    }\n  }\n\n  h3 {\n    margin: 0.5em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h4 {\n    margin: 0.5em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h4 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h5 {\n    display: block;\n    margin: 0.5em 0;\n    padding: 1em 0 1.5em;\n    border: 0;\n    color: ${colors.blue};\n    font-family: Georgia, serif;\n    font-size: 3.2rem;\n    line-height: 1.35em;\n    text-align: center;\n  }\n  @media (min-width: 1180px) {\n    h5 {\n      max-width: 1060px;\n    }\n  }\n  @media (max-width: 500px) {\n    h5 {\n      padding: 0 0 0.5em;\n      font-size: 2.2rem;\n    }\n  }\n\n  h6 {\n    margin: 0.5em 0;\n    font-size: 2.3rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h6 {\n      font-size: 2rem;\n    }\n  }\n\n  /* Tables */\n  table {\n    display: inline-block;\n    overflow-x: auto;\n    margin: 0.5em 0 2.5em;\n    max-width: 100%;\n    width: auto;\n    border-spacing: 0;\n    border-collapse: collapse;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    white-space: nowrap;\n    vertical-align: top;\n  }\n\n  table {\n    -webkit-overflow-scrolling: touch;\n    background: radial-gradient(ellipse at left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 0\n        center,\n      radial-gradient(ellipse at right, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 100% center;\n    background-attachment: scroll, scroll;\n    background-size: 10px 100%, 10px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:first-child {\n    background-image: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:last-child {\n    background-image: linear-gradient(\n      to left,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-position: 100% 0;\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table th {\n    color: ${colors.darkgrey};\n    font-size: 1.2rem;\n    font-weight: 700;\n    letter-spacing: 0.2px;\n    text-align: left;\n    text-transform: uppercase;\n    /* background-color: color(var(--whitegrey) l(+4%)); */\n    background-color: ${lighten('0.04', colors.whitegrey)};\n  }\n\n  table th,\n  table td {\n    padding: 6px 12px;\n    /* border: color(var(--whitegrey) l(-1%) s(-5%)) 1px solid; */\n    border: ${setSaturation('0.05', darken('0.01', colors.whitegrey))} 1px solid;\n  }\n\n  @media (max-width: 500px) {\n    padding: 0;\n    :before {\n      display: none;\n    }\n    :after {\n      display: none;\n    }\n  }\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  // components: { 'interactive-counter': Counter },\n  components: {},\n}).Compiler;\n\nconst Ast = ({ ast, ...props }: any) => {\n  ast.properties = props;\n  return renderAst(ast);\n};\n\nexport interface PostContentProps {\n  htmlAst: any;\n}\n\nconst PostContent: React.SFC<PostContentProps> = ({ htmlAst }) => {\n  return (\n    <PostFullContent className=\"post-full-content\">\n      {/* TODO: this will apply the class when rehype-react is published https://github.com/rhysd/rehype-react/pull/11 */}\n      <Ast className=\"post-content\" ast={htmlAst} />\n    </PostFullContent>\n  );\n};\n\nexport default PostContent;\n"],"sourceRoot":""}