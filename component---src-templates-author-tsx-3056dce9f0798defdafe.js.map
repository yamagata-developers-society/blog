{"version":3,"sources":["webpack:///./src/components/icons/website.tsx","webpack:///./src/templates/author.tsx"],"names":["Website","react","xmlns","viewBox","style","height","d","stroke","strokeLinejoin","strokeMiterlimit","fill","__webpack_require__","__webpack_exports__","pageQuery","HiddenMobile","css","AuthorMeta","styled","target","AuthorBio","Bull","AuthorProfileBioImage","Author","props","author","data","authorYaml","edges","allMarkdownRemark","authorPostCount","reduce","totalCount","edge","postAuthor","node","frontmatter","id","shareUrl","config","siteUrl","location","pathname","authorHasLinks","website","twitterHandle","facebook","react_default","a","createElement","layouts","Helmet_default","title","name","content","description","property","Wrapper","className","SiteHeader","outer","backgroundImage","profile_image","childImageSharp","fluid","src","inner","SiteNav","isHome","shared","AuthorProfileImage","avatar","alt","bio","SocialLink","href","rel","twitter","SiteMain","PostFeed","PostFeedRaise","map","_ref","PostCard","key","fields","slug","post","Footer"],"mappings":"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","file":"component---src-templates-author-tsx-3056dce9f0798defdafe.js","sourcesContent":["// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Website: React.SFC = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ height: '1.6rem' }}>\n    <path\n      d=\"M23.5 11.957c0 6.375-5.163 11.544-11.532 11.544C5.599 23.5.5 18.125.5 11.75.5 5.542 5.37.758 11.505.511l.5-.011C18.374.5 23.5 5.582 23.5 11.957zM11.505.511c-6 6.5-6 14.98 0 22.98m1-22.98c6 6.5 6 14.977 0 22.977M2 17.479h20.063m-19.657-12h19.062m-20.968 6h22.938\"\n      stroke=\"#fff\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit=\"10\"\n      fill=\"none\"\n    />\n  </svg>\n);\nexport default Website;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport styled, { css } from 'react-emotion';\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  AuthorProfileImage,\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteTitle,\n  SiteMain,\n  SocialLink,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport Facebook from '../components/icons/facebook';\nimport Helmet from 'react-helmet';\nimport config from '../website-config';\nimport Website from '../components/icons/website';\nimport Twitter from '../components/icons/twitter';\n\nconst HiddenMobile = css`\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst AuthorMeta = styled.div`\n  z-index: 10;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 0 10px 0;\n  font-family: Georgia, serif;\n  font-style: italic;\n`;\n\nconst AuthorBio = styled.h2`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 5px 0 10px 0;\n  max-width: 600px;\n  font-size: 2rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nconst Bull = styled.span`\n  display: inline-block;\n  margin: 0 12px;\n  opacity: 0.5;\n`;\n\nconst AuthorProfileBioImage = css`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 0 0 20px 0;\n  width: 100px;\n  height: 100px;\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\n`;\n\ninterface AuthorTemplateProps {\n  pageContext: {\n    author: string;\n  };\n  location: {\n    pathname: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      edges: {\n        node: PageContext;\n      }[];\n    };\n    authorYaml: {\n      id: string;\n      website?: string;\n      twitterHandle?: string;\n      facebook?: string;\n      location?: string;\n      profile_image?: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n      bio?: string;\n      avatar: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n    };\n  };\n}\n\nconst Author: React.SFC<AuthorTemplateProps> = props => {\n  const author = props.data.authorYaml;\n  const { edges } = props.data.allMarkdownRemark;\n\n  const authorPostCount = edges.reduce((totalCount, edge) => {\n    const { author: postAuthor } = edge.node.frontmatter;\n\n    if (postAuthor && postAuthor.id == author.id) {\n      totalCount++;\n    }\n\n    return totalCount;\n  }, 0);\n\n  const shareUrl = config.siteUrl + props.location.pathname;\n  const authorHasLinks = author.website || author.twitterHandle || author.facebook;\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <title>\n          {author.id} - {config.title}\n        </title>\n        <meta name=\"description\" content={`${author.id} - ${config.description}`} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"profile\" />\n        <meta property=\"og:title\" content={`${author.id} - ${config.title}`} />\n        <meta property=\"og:url\" content={shareUrl} />\n        <meta property=\"article:publisher\" content=\"https://www.facebook.com/ghost\" />\n        <meta property=\"article:author\" content=\"https://www.facebook.com/ghost\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={`${author.id} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={shareUrl} />\n        <meta name=\"twitter:site\" content={config.twitterHandle} />\n        <meta name=\"twitter:creator\" content={config.twitterHandle} />\n      </Helmet>\n      <Wrapper>\n        <header\n          className={`${SiteHeader} ${outer} no-cover`}\n          style={{\n            backgroundImage: author.profile_image\n              ? `url(${author.profile_image.childImageSharp.fluid.src})`\n              : '',\n          }}\n        >\n          <div className={`${inner}`}>\n            <SiteNav isHome={false} />\n            <SiteHeaderContent>\n              <img\n                className={`${AuthorProfileBioImage} ${AuthorProfileImage}`}\n                src={props.data.authorYaml.avatar.childImageSharp.fluid.src}\n                alt={author.id}\n              />\n              <SiteTitle>{author.id}</SiteTitle>\n              {author.bio && <AuthorBio>{author.bio}</AuthorBio>}\n              <AuthorMeta>\n                {author.location && (\n                  <div className={`${HiddenMobile}`}>\n                    {author.location} <Bull>&bull;</Bull>\n                  </div>\n                )}\n                <div className={`${HiddenMobile}`}>\n                  {authorPostCount > 1 && `${authorPostCount} posts`}\n                  {authorPostCount === 1 && `1 post`}\n                  {authorPostCount === 0 && `No posts`}\n                </div>\n                {authorHasLinks && <Bull>&bull;</Bull>}\n                {author.website && (\n                  <div>\n                    <a\n                      className={`${SocialLink} social-link-wb`}\n                      href={author.website}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <Website />\n                    </a>\n                  </div>\n                )}\n                {author.twitterHandle && (\n                  <a\n                    className={`${SocialLink} social-link-tw`}\n                    href={`https://twitter.com/${author.twitterHandle}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Twitter />\n                  </a>\n                )}\n                {author.facebook && (\n                  <a\n                    className={`${SocialLink} social-link-fb`}\n                    href={`https://www.facebook.com/${author.facebook}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Facebook />\n                  </a>\n                )}\n                {/* TODO: RSS for author */}\n                {/* <a\n                  className={`${SocialLink} social-link-rss`}\n                  href=\"https://feedly.com/i/subscription/feed/https://demo.ghost.io/author/ghost/rss/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    style={{ height: '1.9rem' }}\n                  >\n                    <circle cx=\"6.18\" cy=\"17.82\" r=\"2.18\" />\n                    <path d=\"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z\" />\n                  </svg>\n                </a> */}\n              </AuthorMeta>\n            </SiteHeaderContent>\n          </div>\n        </header>\n        <main id=\"site-main\" className={`${SiteMain} ${outer}`}>\n          <div className={`${inner}`}>\n            <div className={`${PostFeed} ${PostFeedRaise}`}>\n              {edges.map(({ node }) => {\n                if (node.frontmatter.author && node.frontmatter.author.id === author.id) {\n                  return <PostCard key={node.fields.slug} post={node} />;\n                }\n                return null;\n              })}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Author;\n\nexport const pageQuery = graphql`\n  query($author: String) {\n    authorYaml(id: { eq: $author }) {\n      id\n      website\n      twitterHandle\n      bio\n      facebook\n      location\n      profile_image {\n        childImageSharp {\n          fluid(maxWidth: 3720) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      avatar {\n        childImageSharp {\n          fluid(maxWidth: 200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 100) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}